<controls:ExtendedSettingsFlyout
    x:Class="Flantter.MilkyWay.Views.Contents.SettingsFlyouts.UserListsSettingsFlyout"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:twitterObjectsViewModel="using:Flantter.MilkyWay.ViewModels.Apis.Objects"
    xmlns:behaviors="using:Flantter.MilkyWay.Views.Behaviors"
    xmlns:contents="using:Flantter.MilkyWay.Views.Contents"
    xmlns:timeline="using:Flantter.MilkyWay.Views.Contents.Timeline"
    xmlns:controls="using:Flantter.MilkyWay.Views.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d"
    Title="UserLists"
    HorizontalContentAlignment="Stretch"
    VerticalContentAlignment="Stretch"
    Padding="0"
    IconSource="{x:Bind ViewModel.IconSource.Value, Mode=OneWay}"
    MinWidth="320"
    HeaderBackground="{StaticResource SettingsFlyoutHeaderForegroundBrush}"
    d:DesignHeight="720"
    d:DesignWidth="320">

    <Pivot x:Name="UserListsSettingsFlyoutPivot" Style="{StaticResource PivotStyleDynamicHeader}" Background="{StaticResource SettingsFlyoutBackgroundBrush}" SelectedIndex="{x:Bind ViewModel.PivotSelectedIndex.Value, Mode=TwoWay}">

        <PivotItem Margin="0">
            <PivotItem.Header>
                <contents:TabHeader Label="User" Glyph="&#xE13D;" />
            </PivotItem.Header>

            <Grid>
                <Grid.Resources>
                    <Storyboard x:Name="CreateListOpenAnimation">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CreateListStackPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="CreateListStackPanel">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="330">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Name="CreateListCloseAnimation">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CreateListStackPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="CreateListStackPanel">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Name="UpdateListOpenAnimation">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UpdateListStackPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="UpdateListStackPanel">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="330">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Name="UpdateListCloseAnimation">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UpdateListStackPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="UpdateListStackPanel">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Name="ListMenuOpenAnimation">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListMenuStackPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="ListMenuStackPanel">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="126">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Name="ListMenuCloseAnimation">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListMenuStackPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="ListMenuStackPanel">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </Grid.Resources>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ListView Grid.Row="0" Background="{StaticResource ColumnViewBackgroundBrush}" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.UserLists}" ItemContainerStyle="{StaticResource TimelineAreaListViewItem}" SelectedIndex="{x:Bind ViewModel.UserListsSelectedIndex.Value, Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <behaviors:ListViewIncrementalLoadBehavior Command="{x:Bind ViewModel.UserListsIncrementalLoadCommand}" />
                    </i:Interaction.Behaviors>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel>
                                <VirtualizingStackPanel.ChildrenTransitions>
                                    <TransitionCollection/>
                                </VirtualizingStackPanel.ChildrenTransitions>
                            </VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="twitterObjectsViewModel:ListViewModel">
                            <timeline:List ViewModel="{x:Bind}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ListView>

                <ProgressBar Grid.Row="0" Background="Transparent" Visibility="{x:Bind ViewModel.UpdatingUserLists.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="{x:Bind ViewModel.UpdatingUserLists.Value, Mode=OneWay}" VerticalAlignment="Top" />

                <Grid Grid.Row="1">
                    <i:Interaction.Behaviors>

                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.CreateListMenuOpen.Value, Mode=OneWay}" Value="True">
                            <media:ControlStoryboardAction Storyboard="{StaticResource CreateListOpenAnimation}"/>
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.CreateListMenuOpen.Value, Mode=OneWay}" Value="False">
                            <media:ControlStoryboardAction Storyboard="{StaticResource CreateListCloseAnimation}"/>
                        </core:DataTriggerBehavior>

                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.UpdateListMenuOpen.Value, Mode=OneWay}" Value="True">
                            <media:ControlStoryboardAction Storyboard="{StaticResource UpdateListOpenAnimation}"/>
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.UpdateListMenuOpen.Value, Mode=OneWay}" Value="False">
                            <media:ControlStoryboardAction Storyboard="{StaticResource UpdateListCloseAnimation}"/>
                        </core:DataTriggerBehavior>

                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.EditingListMenuOpen.Value, Mode=OneWay}" Value="True">
                            <media:ControlStoryboardAction Storyboard="{StaticResource ListMenuOpenAnimation}"/>
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.EditingListMenuOpen.Value, Mode=OneWay}" Value="False">
                            <media:ControlStoryboardAction Storyboard="{StaticResource ListMenuCloseAnimation}"/>
                        </core:DataTriggerBehavior>

                    </i:Interaction.Behaviors>

                    <StackPanel x:Name="UpdateListStackPanel" Height="0" Visibility="Collapsed">
                        <controls:HorizontalBar/>

                        <TextBox x:Uid="SettingsFlyout_UserLists_Name_TextBox" IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Margin="10" Header="リスト名" Text="{x:Bind ViewModel.EditingListName.Value, Mode=TwoWay}" />

                        <controls:HorizontalBar/>

                        <TextBox x:Uid="SettingsFlyout_UserLists_Description_TextBox" IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Margin="10" Header="説明" Text="{x:Bind ViewModel.EditingListDescription.Value, Mode=TwoWay}" />

                        <controls:HorizontalBar/>

                        <ToggleSwitch x:Uid="SettingsFlyout_UserLists_IsPrivate_ToggleSwitch" IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Margin="10" Header="プライベートリスト" IsOn="{x:Bind ViewModel.EditingListIsPrivate.Value, Mode=TwoWay}" />

                        <controls:HorizontalBar/>

                        <Button IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Height="40" Background="Transparent" Foreground="Transparent" BorderThickness="0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{x:Bind ViewModel.UpdateListCommand}">
                            <Grid>
                                <SymbolIcon Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Width="30" Margin="10,0,0,0" Symbol="Refresh" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <TextBlock x:Uid="SettingsFlyout_UserLists_UpdateList_Textblock" Text="リストを更新する" Padding="0" FontSize="16" Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button>

                        <controls:HorizontalBar/>

                        <Button IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Height="40" Background="Transparent" Foreground="Transparent" BorderThickness="0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{x:Bind ViewModel.CloseUpdateListMenuCommand}">
                            <Grid>
                                <SymbolIcon Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Width="30" Margin="10,0,0,0" Symbol="Clear" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <TextBlock x:Uid="SettingsFlyout_UserLists_CloseUpdateList_Textblock" Text="閉じる" Padding="0" FontSize="16" Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button>
                    </StackPanel>

                    <StackPanel x:Name="CreateListStackPanel" Height="0" Visibility="Collapsed">
                        <controls:HorizontalBar/>

                        <TextBox x:Uid="SettingsFlyout_UserLists_Name_TextBox" IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Margin="10" Header="リスト名" Text="{x:Bind ViewModel.EditingListName.Value, Mode=TwoWay}" />

                        <controls:HorizontalBar/>

                        <TextBox x:Uid="SettingsFlyout_UserLists_Description_TextBox" IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Margin="10" Header="説明" Text="{x:Bind ViewModel.EditingListDescription.Value, Mode=TwoWay}" />

                        <controls:HorizontalBar/>

                        <ToggleSwitch x:Uid="SettingsFlyout_UserLists_IsPrivate_ToggleSwitch" IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Margin="10" Header="プライベートリスト" IsOn="{x:Bind ViewModel.EditingListIsPrivate.Value, Mode=TwoWay}" />

                        <controls:HorizontalBar/>

                        <Button IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Height="40" Background="Transparent" Foreground="Transparent" BorderThickness="0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{x:Bind ViewModel.CreateListCommand}">
                            <Grid>
                                <SymbolIcon Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Width="30" Margin="10,0,0,0" Symbol="Add" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <TextBlock x:Uid="SettingsFlyout_UserLists_CreateList_Textblock" Text="リストを作成する" Padding="0" FontSize="16" Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button>

                        <controls:HorizontalBar/>

                        <Button IsEnabled="{x:Bind ViewModel.CreatingOrUpdatingList.Value, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}" Height="40" Background="Transparent" Foreground="Transparent" BorderThickness="0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{x:Bind ViewModel.CloseCreateListMenuCommand}">
                            <Grid>
                                <SymbolIcon Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Width="30" Margin="10,0,0,0" Symbol="Clear" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <TextBlock x:Uid="SettingsFlyout_UserLists_CloseCreateList_Textblock" Text="閉じる" Padding="0" FontSize="16" Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button>
                    </StackPanel>

                    <StackPanel x:Name="ListMenuStackPanel" Height="0" Visibility="Collapsed">
                        <controls:HorizontalBar/>

                        <Button IsEnabled="{x:Bind ViewModel.UpdateListButtonIsEnabled.Value, Mode=OneWay}" Height="40" Background="Transparent" Foreground="Transparent" BorderThickness="0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{x:Bind ViewModel.DeleteListCommand}">
                            <Grid>
                                <SymbolIcon Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Width="30" Margin="10,0,0,0" Symbol="Delete" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <TextBlock x:Uid="SettingsFlyout_UserLists_DeleteList_Textblock" Text="リストを削除する" Padding="0" FontSize="16" Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button>

                        <controls:HorizontalBar/>

                        <Button IsEnabled="{x:Bind ViewModel.UpdateListButtonIsEnabled.Value, Mode=OneWay}" Height="40" Background="Transparent" Foreground="Transparent" BorderThickness="0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{x:Bind ViewModel.OpenUpdateListMenuCommand}">
                            <Grid>
                                <SymbolIcon Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Width="30" Margin="10,0,0,0" Symbol="Refresh" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <TextBlock x:Uid="SettingsFlyout_UserLists_UpdateList_Textblock" Text="リストを更新する" Padding="0" FontSize="16" Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button>

                        <controls:HorizontalBar/>

                        <Button Height="40" Background="Transparent" Foreground="Transparent" BorderThickness="0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{x:Bind ViewModel.OpenCreateListMenuCommand}">
                            <Grid>
                                <SymbolIcon Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Width="30" Margin="10,0,0,0" Symbol="Add" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <TextBlock x:Uid="SettingsFlyout_UserLists_CreateList_Textblock" Text="リストを作成する" Padding="0" FontSize="16" Foreground="{StaticResource SettingsFlyoutTextblockForegroundBrush}" Margin="60,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Button>
                    </StackPanel>

                </Grid>

            </Grid>
        </PivotItem>

        <PivotItem Margin="0">
            <PivotItem.Header>
                <contents:TabHeader Label="Subscribe" Glyph="&#xE125;" />
            </PivotItem.Header>

            <Grid>
                <ListView Background="{StaticResource ColumnViewBackgroundBrush}" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.SubscribeLists}" ItemContainerStyle="{StaticResource TimelineAreaListViewItem}">
                    <i:Interaction.Behaviors>
                        <behaviors:ListViewIncrementalLoadBehavior Command="{x:Bind ViewModel.SubscribeListsIncrementalLoadCommand}" />
                    </i:Interaction.Behaviors>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel>
                                <VirtualizingStackPanel.ChildrenTransitions>
                                    <TransitionCollection/>
                                </VirtualizingStackPanel.ChildrenTransitions>
                            </VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="twitterObjectsViewModel:ListViewModel">
                            <timeline:List ViewModel="{x:Bind}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ListView>

                <ProgressBar Background="Transparent" Visibility="{x:Bind ViewModel.UpdatingSubscribeLists.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="{x:Bind ViewModel.UpdatingSubscribeLists.Value, Mode=OneWay}" VerticalAlignment="Top" />

            </Grid>
        </PivotItem>

        <PivotItem Margin="0">
            <PivotItem.Header>
                <contents:TabHeader Label="Member" Glyph="&#xE136;" />
            </PivotItem.Header>

            <Grid>
                <ListView Background="{StaticResource ColumnViewBackgroundBrush}" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.MembershipLists}" ItemContainerStyle="{StaticResource TimelineAreaListViewItem}">
                    <i:Interaction.Behaviors>
                        <behaviors:ListViewIncrementalLoadBehavior Command="{x:Bind ViewModel.MembershipListsIncrementalLoadCommand}" />
                    </i:Interaction.Behaviors>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel>
                                <VirtualizingStackPanel.ChildrenTransitions>
                                    <TransitionCollection/>
                                </VirtualizingStackPanel.ChildrenTransitions>
                            </VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="twitterObjectsViewModel:ListViewModel">
                            <timeline:List ViewModel="{x:Bind}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ListView>

                <ProgressBar Background="Transparent" Visibility="{x:Bind ViewModel.UpdatingMembershipLists.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="{x:Bind ViewModel.UpdatingMembershipLists.Value, Mode=OneWay}" VerticalAlignment="Top" />

            </Grid>
        </PivotItem>
    </Pivot>

</controls:ExtendedSettingsFlyout>
