<UserControl
    x:Class="Flantter.MilkyWay.Views.Contents.TimelineArea"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="using:Flantter.MilkyWay.Common"
    xmlns:twitterObjectsViewModel="using:Flantter.MilkyWay.ViewModels.Apis.Objects"
    xmlns:behaviors="using:Flantter.MilkyWay.Views.Behaviors"
    xmlns:timeline="using:Flantter.MilkyWay.Views.Contents.Timeline"
    xmlns:controls="using:Flantter.MilkyWay.Views.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d"
    d:DesignHeight="720"
    d:DesignWidth="400">

    <Grid>
        <ProgressBar Foreground="{StaticResource ProgressBarForegroundBrush}" VerticalAlignment="Top" Visibility="{x:Bind ViewModel.Updating.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="{x:Bind ViewModel.Updating.Value, Mode=OneWay}" />

        <controls:PullToRefreshListView x:Uid="TimelineArea_PullToRefreshListView" x:Name="TimelineAreaPullToRefreshListView" DataContext="{x:Bind ViewModel, Mode=OneWay}" ItemsSource="{x:Bind ViewModel.Tweets}" SelectedIndex="{x:Bind ViewModel.SelectedIndex.Value, Mode=TwoWay}" Foreground="Transparent" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionMode="{x:Bind ViewModel.ListViewSelectionMode.Value, Mode=OneWay}" PullPartTemplate="Pull to Refresh" ReleasePartTemplate="Release to Refresh" IndicatorForegroundBrush="{StaticResource PullToRefreshCharacterBrush}" ItemContainerStyle="{StaticResource TimelineAreaListViewItem}" SelectedItemsList="{x:Bind ViewModel.SelectedItemsList.Value, Mode=TwoWay}" IsMultiSelectCheckBoxEnabled="False">
            <i:Interaction.Behaviors>
                <behaviors:ListViewScrollControlBehavior IsScrollLockEnabled="{x:Bind ViewModel.IsScrollLockEnabled.Value, Mode=OneWay}" IsScrollLockToTopEnabled="{x:Bind ViewModel.IsScrollLockToTopEnabled.Value, Mode=OneWay}" UnreadCount="{x:Bind ViewModel.UnreadCount.Value, Mode=TwoWay}" />
                <core:EventTriggerBehavior EventName="MoreContent">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.IncrementalLoadCommand}" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="RefreshContent">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.RefreshCommand}" /> 
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="DoubleTapped">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.TweetDoubleTappedActionCommand}" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="SelectionChanged">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.Notice.ChangeSelectedTweetCommand}" CommandParameter="{Binding ElementName=TimelineAreaPullToRefreshListView, Path=SelectedItem, Mode=OneWay}" />
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel>
                        <VirtualizingStackPanel.ChildrenTransitions>
                            <TransitionCollection/>
                        </VirtualizingStackPanel.ChildrenTransitions>
                    </VirtualizingStackPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            
            <ItemsControl.ItemTemplateSelector>
                <common:DataTypeTemplateSelector>
                    <DataTemplate x:Key="StatusViewModel" x:DataType="twitterObjectsViewModel:StatusViewModel">
                        <timeline:Status ViewModel="{x:Bind}" 
                            MentionStatusVisibility="{x:Bind MentionStatusVisibility, Mode=OneWay}" IsMentionStatusLoaded="{x:Bind IsMentionStatusLoaded, Mode=OneWay}"
                            IsMentionStatusLoading="{x:Bind IsMentionStatusLoading, Mode=OneWay}" Command="{x:Bind Notice.LoadMentionCommand}" CommandParameter="{x:Bind Mode=OneWay}"
                            QuotedStatusVisibility="{x:Bind QuotedStatusVisibility, Mode=OneWay}"
                            QuotedStatusMediaVisibility="{x:Bind QuotedStatusMediaVisibility, Mode=OneWay}"
                            MediaVisibility="{x:Bind MediaVisibility, Mode=OneWay}" RetweetInformationVisibility="{x:Bind RetweetInformationVisibility, Mode=OneWay}"
                            RetweetTriangleIconVisibility="{x:Bind RetweetTriangleIconVisibility, Mode=OneWay}"
                            FavoriteTriangleIconVisibility="{x:Bind FavoriteTriangleIconVisibility, Mode=OneWay}"
                            RetweetFavoriteTriangleIconVisibility="{x:Bind RetweetFavoriteTriangleIconVisibility, Mode=OneWay}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="DirectMessageViewModel" x:DataType="twitterObjectsViewModel:DirectMessageViewModel">
                        <timeline:DirectMessage ViewModel="{x:Bind}" MediaVisibility="{x:Bind MediaVisibility, Mode=OneWay}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="EventMessageViewModel" x:DataType="twitterObjectsViewModel:EventMessageViewModel">
                        <timeline:EventMessage ViewModel="{x:Bind}" TargetStatusVisibility="{x:Bind TargetStatusVisibility, Mode=OneWay}" TargetStatusMediaVisibility="{x:Bind TargetStatusMediaVisibility, Mode=OneWay}" />
                    </DataTemplate>
                    <DataTemplate x:Key="GapViewModel" x:DataType="twitterObjectsViewModel:GapViewModel">
                        <timeline:Gap ViewModel="{x:Bind}" Command="{x:Bind Notice.GetGapStatusCommand}" CommandParameter="{x:Bind Mode=OneWay}"/>
                    </DataTemplate>
                </common:DataTypeTemplateSelector>
            </ItemsControl.ItemTemplateSelector>
            
        </controls:PullToRefreshListView>
    </Grid>
</UserControl>
