<UserControl
    x:Class="Flantter.MilkyWay.Views.Contents.Timeline.Status"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:twitterObjectsViewModel="using:Flantter.MilkyWay.ViewModels.Apis.Objects"
    xmlns:behaviors="using:Flantter.MilkyWay.Views.Behaviors"
    xmlns:util="using:Flantter.MilkyWay.Views.Util"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:uwpToolKit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpToolKitBehaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    
    <UserControl.Resources>
        <Storyboard x:Name="TweetSlideAnimation">
            <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="TweetStackPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="-40">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TweetStackPanel">
                <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="TweetExpandAnimation">
            <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="TweetStackPanel">
                <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <StackPanel x:Name="TweetStackPanel" Background="{x:Bind ViewModel.BackgroundBrush, Mode=OneWay, Converter={StaticResource StringToTweetBackgroundBrushConverter}}" RenderTransformOrigin="0.5,0.5" Padding="0,7">

        <StackPanel.RenderTransform>
            <CompositeTransform/>
        </StackPanel.RenderTransform>

        <Grid x:DeferLoadStrategy="Lazy" x:Name="MentionStatusGrid" Visibility="Collapsed" Height="0" Margin="0,0,0,3">
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Tapped">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.Notice.ShowConversationCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            
            <Grid.Resources>
                <Storyboard x:Name="MentionStatusOpenAnimation">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusProgressBar" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusProgressBar" Storyboard.TargetProperty="IsIndeterminate">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusMainGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="MentionStatusGrid">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="{x:Bind ViewModel.Setting.FontSize, Mode=OneWay, Converter={StaticResource DoublePlusConverter}, ConverterParameter=30}">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Name="MentionStatusLoadingOpenAnimation">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusProgressBar" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusProgressBar" Storyboard.TargetProperty="IsIndeterminate">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusMainGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="MentionStatusGrid">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Name="MentionStatusCloseAnimation">
                    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="MentionStatusGrid">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusProgressBar" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusProgressBar" Storyboard.TargetProperty="IsIndeterminate">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="False"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MentionStatusMainGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                    
                </Storyboard>
            </Grid.Resources>

            <ProgressBar x:Name="MentionStatusProgressBar" Visibility="Collapsed" Foreground="{StaticResource ProgressBarForegroundBrush}"/>

            <Grid x:Name="MentionStatusMainGrid" Margin="30,0,12,0" Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Height="30" Width="30" CornerRadius="4" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Border.Background>
                        <ImageBrush ImageSource="{x:Bind ViewModel.MentionStatusProfileImageUrl, Mode=OneWay}" />
                    </Border.Background>
                </Border>
                <StackPanel Grid.Column="2">
                    <TextBlock FontSize="10.5">
                        <Run Foreground="{StaticResource TweetNameTextblockForegroundBrush}" FontSize="12" Text="{x:Bind ViewModel.MentionStatusName, Mode=OneWay}" FontWeight="Bold"/>
                        <Run Foreground="{StaticResource TweetScreenNameTextblockForegroundBrush}" Text=" @"/><Run Foreground="{StaticResource TweetScreenNameTextblockForegroundBrush}" Text="{x:Bind ViewModel.MentionStatusScreenName, Mode=OneWay}"/>
                    </TextBlock>
                    <TextBlock FontWeight="{x:Bind ViewModel.Setting.FontWeight, Mode=OneWay}" Height="{x:Bind ViewModel.Setting.FontSize, Mode=OneWay, Converter={StaticResource DoublePlusConverter}, ConverterParameter=7}" TextWrapping="NoWrap" TextTrimming="WordEllipsis" Margin="0,2" FontFamily="{x:Bind ViewModel.Setting.CustomFontName, Mode=OneWay}" FontSize="{x:Bind ViewModel.Setting.FontSize, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Entities="{x:Bind ViewModel.Model.MentionStatus.Entities, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Text="{x:Bind ViewModel.MentionStatusText, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Emojis="{x:Bind ViewModel.Model.MentionStatus.Emojis, Mode=OneWay}"/>
                </StackPanel>
            </Grid>
        </Grid>
        
        <Grid Margin="0,0,7,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Margin="5,0">
                <Border Height="{x:Bind ViewModel.Setting.IconSize, Mode=OneWay, Converter={StaticResource EnumToDoubleConverter}}" Width="{x:Bind ViewModel.Setting.IconSize, Mode=OneWay, Converter={StaticResource EnumToDoubleConverter}}" CornerRadius="4">
                    <Border.Background>
                        <ImageBrush ImageSource="{x:Bind ViewModel.ProfileImageUrl, Mode=OneWay}" />
                    </Border.Background>

                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.Notice.ShowUserProfileCommand}" CommandParameter="{x:Bind ViewModel.Model.User.Id, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Border>
                <SymbolIcon Visibility="{x:Bind ViewModel.RetweetInformationVisibility, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="{StaticResource TweetRetweetSymbolIconForegroundBrush}" Symbol="ReShare" HorizontalAlignment="Right" VerticalAlignment="Top" Width="25"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Margin="5,0">
                <TextBlock FontSize="10.5" HorizontalAlignment="Left">
                    <Run Foreground="{StaticResource TweetNameTextblockForegroundBrush}" FontSize="12" Text="{x:Bind ViewModel.ProtectedText, Mode=OneWay}" FontWeight="Bold" /><Run Foreground="{StaticResource TweetNameTextblockForegroundBrush}" FontSize="12" Text="{x:Bind ViewModel.Name, Mode=OneWay}" FontWeight="Bold"/>
                    <Run Foreground="{StaticResource TweetScreenNameTextblockForegroundBrush}" Text=" @"/><Run Foreground="{StaticResource TweetScreenNameTextblockForegroundBrush}" Text="{x:Bind ViewModel.ScreenName, Mode=OneWay}"/>
                </TextBlock>
                <TextBlock Visibility="{x:Bind ViewModel.SpoilerText, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}" Foreground="{StaticResource TweetTextTextblockForegroundBrush}" TextWrapping="Wrap" Margin="0,2,0,0" FontWeight="{x:Bind ViewModel.Setting.FontWeight, Mode=OneWay}" FontFamily="{x:Bind ViewModel.Setting.CustomFontName, Mode=OneWay}" FontSize="{x:Bind ViewModel.Setting.FontSize, Mode=OneWay}" Text="{x:Bind ViewModel.SpoilerText, Mode=OneWay}"/>
                <TextBlock x:Name="StatusReadMoreSpoilerText" FontSize="{x:Bind ViewModel.Setting.FontSize, Mode=OneWay}" Visibility="{x:Bind ViewModel.IsContentWarning, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,2,0,0">
                    <Hyperlink>
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=StatusReadMoreSpoilerText}" PropertyName="Visibility" Value="Collapsed"/>
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.Notice.ShowContentWarningTextCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <Run x:Uid="Tweet_Text_ReadMore" Foreground="{StaticResource TweetTextHyperlinkTextblockForegroundBrush}" Text="続きを見る"/>
                    </Hyperlink>
                </TextBlock>
                <TextBlock x:Name="StatusBodyText" Visibility="{x:Bind ViewModel.IsContentWarning, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" TextWrapping="Wrap" Margin="0,2" FontWeight="{x:Bind ViewModel.Setting.FontWeight, Mode=OneWay}" FontFamily="{x:Bind ViewModel.Setting.CustomFontName, Mode=OneWay}" FontSize="{x:Bind ViewModel.Setting.FontSize, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Entities="{x:Bind ViewModel.Model.Entities, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Text="{x:Bind ViewModel.Text, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Emojis="{x:Bind ViewModel.Model.Emojis, Mode=OneWay}"/>
                <TextBlock FontSize="10.5" HorizontalAlignment="Left">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <util:OpenLinkAction x:Name="StatusDateTimeLinkAction" IsEnabled="False" Uri="{x:Bind ViewModel.Model.Url, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <Run Foreground="{StaticResource TweetDateTimeTextblockForegroundBrush}" Text="{x:Bind ViewModel.CreatedAt, Mode=OneWay}"/>
                    <Run Foreground="{StaticResource TweetOtherTextblockForegroundBrush}" Text="  -  "/>
                    <Run Foreground="{StaticResource TweetOtherTextblockForegroundBrush}" Text="via "/><Run Foreground="{StaticResource TweetSourceTextblockForegroundBrush}" Text="{x:Bind ViewModel.Source, Mode=OneWay}"/>
                </TextBlock>

                <uwpToolKit:AdaptiveGridView x:DeferLoadStrategy="Lazy" Margin="0,3,0,0" Padding="0" x:Name="MediaItemsControl" Visibility="Collapsed" ItemsSource="{x:Bind ViewModel.MediaEntities, Mode=OneWay}" ItemHeight="{x:Bind ViewModel.Setting.TweetMediaThumbnailHeight, Mode=OneWay}" DesiredWidth="{x:Bind ViewModel.Setting.TweetMediaThumbnailWidth, Mode=OneWay}" SelectionMode="None" IsItemClickEnabled="True" StretchContentForSingleRow="False">
                    <ItemsControl.ItemContainerTransitions>
                        <TransitionCollection/>
                    </ItemsControl.ItemContainerTransitions>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="twitterObjectsViewModel:MediaEntityViewModel">
                            <Border Background="Transparent">
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <core:InvokeCommandAction Command="{x:Bind Notice.ShowMediaCommand}" CommandParameter="{x:Bind Model, Mode=OneWay}"/>
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Image Source="{x:Bind MediaThumbnailUrl, Mode=OneWay}" Stretch="UniformToFill" VerticalAlignment="Center">
                                    <i:Interaction.Behaviors>
                                        <uwpToolKitBehaviors:Blur Value="{x:Bind PossibilySensitiveBlur}"
                                                        Duration="0"
                                                        Delay="0"
                                                        AutomaticallyStart="True"/>
                                    </i:Interaction.Behaviors>
                                </Image>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </uwpToolKit:AdaptiveGridView>

                <Grid x:DeferLoadStrategy="Lazy" x:Name="RetweetInformationGrid" Visibility="Collapsed" Margin="0,2,0,0" Background="Transparent" HorizontalAlignment="Left">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.Notice.ShowUserProfileCommand}" CommandParameter="{x:Bind ViewModel.Model.RetweetInformation.User.Id, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="22" Width="22" CornerRadius="2">
                        <Border.Background>
                            <ImageBrush ImageSource="{x:Bind ViewModel.RetweetInformationProfileImageUrl, Mode=OneWay}" />
                        </Border.Background>
                    </Border>
                    <TextBlock Grid.Column="1" Foreground="{StaticResource TweetRetweetTextblockForegroundBrush}" FontSize="10" Margin="5,0,0,0" VerticalAlignment="Bottom" TextWrapping="Wrap" Text="{x:Bind ViewModel.RetweetInformationText, Mode=OneWay}"/>
                </Grid>

                <StackPanel Margin="0,2,0,0">
                    <TextBlock Visibility="{x:Bind ViewModel.RetweetCounterVisibility, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" Foreground="{StaticResource TweetRetweetTextblockForegroundBrush}" FontSize="10" TextWrapping="Wrap" Text="{x:Bind ViewModel.RetweetCounterText, Mode=OneWay}"/>
                    <TextBlock Visibility="{x:Bind ViewModel.FavoriteCounterVisibility, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" Foreground="{StaticResource TweetRetweetTextblockForegroundBrush}" FontSize="10" TextWrapping="Wrap" Text="{x:Bind ViewModel.FavoriteCounterText, Mode=OneWay}"/>
                </StackPanel>
            </StackPanel>

            <ContentControl x:Name="RetweetTriangleIcon" x:DeferLoadStrategy="Lazy" Style="{StaticResource RetweetTriangleIcon}" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-5"/>
            <ContentControl x:Name="FavoriteTriangleIcon" x:DeferLoadStrategy="Lazy" Style="{StaticResource FavoriteTriangleIcon}" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-5"/>
            <ContentControl x:Name="RetweetFavoriteTriangleIcon" x:DeferLoadStrategy="Lazy" Style="{StaticResource RetweetFavoriteTriangleIcon}" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-5"/>
        </Grid>

        <Border x:DeferLoadStrategy="Lazy" x:Name="QuotedStatusBorder" Visibility="Collapsed" Margin="30,6,12,2" Background="{StaticResource TweetQuotedStatusBackgroundBrush}" Padding="4,2" CornerRadius="5">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Grid Grid.Row="0">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.Notice.ShowStatusDetailCommand}" CommandParameter="{x:Bind ViewModel.Model.QuotedStatus, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" Height="28" Width="28" CornerRadius="4" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <Border.Background>
                            <ImageBrush ImageSource="{x:Bind ViewModel.QuotedStatusProfileImageUrl, Mode=OneWay}" />
                        </Border.Background>
                    </Border>
                    <StackPanel Grid.Column="2">
                        <TextBlock FontSize="10.5">
                            <Run Foreground="{StaticResource TweetNameTextblockForegroundBrush}" FontSize="12" Text="{x:Bind ViewModel.QuotedStatusName, Mode=OneWay}" FontWeight="Bold"/>
                            <Run Foreground="{StaticResource TweetScreenNameTextblockForegroundBrush}" Text=" @"/><Run Foreground="{StaticResource TweetScreenNameTextblockForegroundBrush}" Text="{x:Bind ViewModel.QuotedStatusScreenName, Mode=OneWay}"/>
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap" Margin="0,2" FontWeight="{x:Bind ViewModel.Setting.FontWeight, Mode=OneWay}" FontFamily="{Binding Setting.CustomFontName, Mode=OneWay}" FontSize="{Binding Setting.FontSize, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Entities="{x:Bind ViewModel.Model.QuotedStatus.Entities, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Text="{x:Bind ViewModel.QuotedStatusText, Mode=OneWay}" behaviors:TexbblockNavigationServiceBehavior.Emojis="{x:Bind ViewModel.Model.QuotedStatus.Emojis, Mode=OneWay}"/>
                    </StackPanel>
                </Grid>

                <uwpToolKit:AdaptiveGridView Grid.Row="1" Padding="0" x:DeferLoadStrategy="Lazy" x:Name="QuotedStatusMediaItemsControl" Visibility="Collapsed" ItemsSource="{x:Bind ViewModel.QuotedStatusMediaEntities, Mode=OneWay}" ItemHeight="{x:Bind ViewModel.Setting.TweetMediaThumbnailHeight, Mode=OneWay}" DesiredWidth="{x:Bind ViewModel.Setting.TweetMediaThumbnailWidth, Mode=OneWay}" SelectionMode="None" IsItemClickEnabled="True" StretchContentForSingleRow="False" Margin="38,0,0,0">
                    <ItemsControl.ItemContainerTransitions>
                        <TransitionCollection/>
                    </ItemsControl.ItemContainerTransitions>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="twitterObjectsViewModel:MediaEntityViewModel">
                            <Border Background="Transparent">
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <core:InvokeCommandAction Command="{x:Bind Notice.ShowMediaCommand}" CommandParameter="{x:Bind Model, Mode=OneWay}"/>
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Image Source="{x:Bind MediaThumbnailUrl, Mode=OneWay}" Stretch="UniformToFill" VerticalAlignment="Center">
                                    <i:Interaction.Behaviors>
                                        <uwpToolKitBehaviors:Blur Value="{x:Bind PossibilySensitiveBlur}"
                                                                  Duration="0"
                                                                  Delay="0"
                                                                  AutomaticallyStart="True"/>
                                    </i:Interaction.Behaviors>
                                </Image>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </uwpToolKit:AdaptiveGridView>
            </Grid>

        </Border>

        <Grid x:DeferLoadStrategy="Lazy" x:Name="CommandGrid" Visibility="Collapsed" Height="0" HorizontalAlignment="Right" Margin="0,0,12,0">

            <Grid.Resources>
                <Storyboard x:Name="TweetCommandBarOpenAnimation">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CommandGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="CommandGrid">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="{x:Bind ViewModel.Setting.TweetCommandBarHeight, Mode=OneWay}">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Name="TweetCommandBarCloseAnimation">
                    <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="CommandGrid">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CommandGrid" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                </Storyboard>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="4" Width="60" ToolTipService.ToolTip="Reply" BorderThickness="0" Background="{x:Null}" Padding="15,6" VerticalAlignment="Stretch" Command="{x:Bind ViewModel.Notice.ReplyCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}">
                <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <util:ShowAttachedFlyoutAction/>
                    </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                
                <SymbolIcon Foreground="{StaticResource TweetCommandBarReplySymbolIconForegroundBrush}" Symbol="Message"/>
                
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_Reply" Text="&#xE172;    返信" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.ReplyCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_ReplyToAll" Text="&#xE165;    全員に返信" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.ReplyToAllCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_SendDirectMessage" Visibility="{x:Bind ViewModel.IsMyTweet, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" Text="&#xE119;    DMで返信" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.SendDirectMessageCommand}" CommandParameter="{x:Bind ViewModel.Model.User.Id, Mode=OneWay}"/>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
            </Button>
            <Button Grid.Column="3" Width="60" ToolTipService.ToolTip="Retweet" BorderThickness="0" Background="{x:Null}" Padding="15,6" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.IsUserProtected, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" Command="{x:Bind ViewModel.Notice.RetweetCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}">
                <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <util:ShowAttachedFlyoutAction/>
                    </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>

                <SymbolIcon Foreground="{StaticResource TweetCommandBarRetweetSymbolIconForegroundBrush}" Symbol="ReShare" behaviors:SymbolIconForegroundBrushSwitchBehavior.IsEnabled="{x:Bind ViewModel.IsRetweeted, Mode=OneWay}" behaviors:SymbolIconForegroundBrushSwitchBehavior.EnabledBrush="{StaticResource TweetCommandBarDestroyRetweetSymbolIconForegroundBrush}" behaviors:SymbolIconForegroundBrushSwitchBehavior.DisabledBrush="{StaticResource TweetCommandBarRetweetSymbolIconForegroundBrush}"/>

                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_Retweet" Text="&#xE1CA;    リツイート" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.RetweetCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_UrlQuoteRetweet" Text="&#xE167;    コメント付きリツイート" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.UrlQuoteRetweetCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_RetweetFavorite" Text="&#xE1CA;    リツイート + お気に入りへ登録" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.RetweetFavoriteCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
            </Button>
            <Button Grid.Column="2" Width="60" ToolTipService.ToolTip="Favorite" BorderThickness="0" Background="{x:Null}" Padding="15,6" VerticalAlignment="Stretch" Command="{x:Bind ViewModel.Notice.FavoriteCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}">
                <SymbolIcon Foreground="{StaticResource TweetCommandBarFavoriteSymbolIconForegroundBrush}" Symbol="Favorite" behaviors:SymbolIconForegroundBrushSwitchBehavior.IsEnabled="{x:Bind ViewModel.IsFavorited, Mode=OneWay}" behaviors:SymbolIconForegroundBrushSwitchBehavior.EnabledBrush="{StaticResource TweetCommandBarDestroyFavoriteSymbolIconForegroundBrush}" behaviors:SymbolIconForegroundBrushSwitchBehavior.DisabledBrush="{StaticResource TweetCommandBarFavoriteSymbolIconForegroundBrush}"/>
            </Button>
            <Button Grid.Column="1" Width="60" ToolTipService.ToolTip="Url" BorderThickness="0" Background="{x:Null}" Padding="15,6" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.EntitiesList.Count, Mode=OneWay, Converter={StaticResource IntToVisibilityConverter}}">
                <SymbolIcon Foreground="{StaticResource TweetCommandBarUrlSymbolIconForegroundBrush}" Symbol="Link"/>
                <Button.Flyout>
                    <Flyout FlyoutPresenterStyle="{StaticResource MenuFlyoutStyleFlyoutPresenter}">
                        <ItemsControl ItemsSource="{x:Bind ViewModel.EntitiesList, Mode=OneWay}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="twitterObjectsViewModel:EntityViewModel">
                                    <MenuFlyoutItem ToolTipService.Placement="Top" ToolTipService.ToolTip="{x:Bind ExpandedUrl, Mode=OneWay}" Text="{x:Bind DisplayUrl, Mode=OneWay}" Command="{x:Bind Notice.UrlClickCommand}" CommandParameter="{x:Bind ExpandedUrl, Mode=OneWay}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Flyout>
                </Button.Flyout>
            </Button>
            <Button Grid.Column="0" Width="60" ToolTipService.ToolTip="Menu" BorderThickness="0" Background="{x:Null}" Padding="15,6" VerticalAlignment="Stretch">
                <SymbolIcon Foreground="{StaticResource TweetCommandBarMenuSymbolIconForegroundBrush}" Symbol="Add" />
                <Button.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_UserProfile" Text="&#xE136;    ユーザープロフィール" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.ShowUserProfileCommand}" CommandParameter="{x:Bind ViewModel.Model.User.Id, Mode=OneWay}"/>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_StatusDetail" Text="&#xE14C;    ツイートの詳細" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.ShowStatusDetailCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutSubItem x:Uid="Tweet_Command_MenuFlyout_ReplyMenu" Text="&#xE172;    リプライ関連" FontFamily="Segoe UI Symbol">
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_Reply" Text="&#xE172;    返信" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.ReplyCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_ReplyToAll" Text="&#xE165;    全員に返信" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.ReplyToAllCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_SendDirectMessage" Visibility="{x:Bind ViewModel.IsMyTweet, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" Text="&#xE119;    DMで返信" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.SendDirectMessageCommand}" CommandParameter="{x:Bind ViewModel.Model.User.Id, Mode=OneWay}"/>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSubItem x:Uid="Tweet_Command_MenuFlyout_RetweetMenu" Text="&#xE1CA;    リツイート関連" Visibility="{x:Bind ViewModel.IsUserProtected, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" FontFamily="Segoe UI Symbol">
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_Retweet" Text="&#xE1CA;    リツイート" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.RetweetCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_UrlQuoteRetweet" Text="&#xE167;    コメント付きリツイート" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.UrlQuoteRetweetCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_RetweetFavorite" Text="&#xE1CA;    リツイート + お気に入りへ登録" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.RetweetFavoriteCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutSeparator Visibility="{x:Bind ViewModel.RetweetCount, Mode=OneWay, Converter={StaticResource IntToVisibilityConverter}}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_Retweeter" Text="&#xE1CA;    リツイートした人" FontFamily="Segoe UI Symbol" Visibility="{x:Bind ViewModel.RetweetCount, Mode=OneWay, Converter={StaticResource IntToVisibilityConverter}}" Command="{x:Bind ViewModel.Notice.ShowRetweetersCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSubItem x:Uid="Tweet_Command_MenuFlyout_FavoriteMenu" Text="&#xE1CF;    お気に入り関連" FontFamily="Segoe UI Symbol">
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_Favorite" Text="&#xE1CF;    お気に入りへ登録" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.FavoriteCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_RetweetFavorite" Text="&#xE1CA;    リツイート + お気に入りへ登録" FontFamily="Segoe UI Symbol" Visibility="{x:Bind ViewModel.IsUserProtected, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" Command="{x:Bind ViewModel.Notice.RetweetFavoriteCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutSeparator Visibility="{x:Bind ViewModel.FavoriteCount, Mode=OneWay, Converter={StaticResource IntToVisibilityConverter}}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_Favoriter" Text="&#xE1CA;    お気に入りした人" FontFamily="Segoe UI Symbol" Visibility="{x:Bind ViewModel.FavoriteCount, Mode=OneWay, Converter={StaticResource IntToVisibilityConverter}}" Command="{x:Bind ViewModel.Notice.ShowFavoritersCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSubItem x:Uid="Tweet_Command_MenuFlyout_OtherMenu" Text="&#xE16F;    その他" FontFamily="Segoe UI Symbol">
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_OpenStatusUrl" Text="&#xE71B;    ツイートのURLを開く" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.OpenStatusUrlCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_ShareStatus" Text="&#xE72D;    ツイートの共有" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.ShareStatusCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_CopyTweet" Text="&#xE16F;    ツイートのコピー" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.CopyTweetCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_CopyTweetUrl" Text="&#xE71B;    ツイートURLのコピー" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.CopyTweetUrlCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                            <MenuFlyoutSeparator />
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_MuteUser" Visibility="{x:Bind ViewModel.IsMyTweet, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" Text="&#xE1E0;    ユーザーミュート" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.MuteUserCommand}" CommandParameter="{x:Bind ViewModel.Model.User, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_MuteClient" Text="&#xE1E0;    クライアントミュート" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.MuteClientCommand}" CommandParameter="{x:Bind ViewModel.Model.Source, Mode=OneWay}"/>
                            <MenuFlyoutSeparator />
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_AddToCollection" Text="&#xE109;    コレクションに追加" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.AddToCollectionCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_DeleteFromCollection" Text="&#xE107;    コレクションから削除" FontFamily="Segoe UI Symbol" Visibility="{x:Bind ViewModel.IsCollectionStatus, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{x:Bind ViewModel.Notice.DeleteFromCollectionCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                            <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_AddToList" Text="&#xE109;    リストに追加" FontFamily="Segoe UI Symbol" Command="{x:Bind ViewModel.Notice.AddToListCommand}" CommandParameter="{x:Bind ViewModel.Model.User.Id, Mode=OneWay}"/>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSeparator Visibility="{x:Bind ViewModel.IsMyTweet, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_DeleteTweet" Text="&#xE107;    削除" FontFamily="Segoe UI Symbol" Visibility="{x:Bind ViewModel.IsMyTweet, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{x:Bind ViewModel.Notice.DeleteTweetCommand}" CommandParameter="{x:Bind ViewModel.Model, Mode=OneWay}"/>
                        <MenuFlyoutSeparator Visibility="{x:Bind ViewModel.IsMyRetweet, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <MenuFlyoutItem x:Uid="Tweet_Command_MenuFlyout_DeleteRetweet" Text="&#xE107;    リツイートの削除" FontFamily="Segoe UI Symbol" Visibility="{x:Bind ViewModel.IsMyRetweet, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{x:Bind ViewModel.Notice.DeleteRetweetCommand}" CommandParameter="{x:Bind ViewModel, Mode=OneWay}"/>
                    </MenuFlyout>
                </Button.Flyout>
            </Button>
        </Grid>
    </StackPanel>
</UserControl>
