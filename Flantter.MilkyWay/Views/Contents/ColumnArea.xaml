<UserControl
    x:Class="Flantter.MilkyWay.Views.Contents.ColumnArea"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:Flantter.MilkyWay.ViewModels"
    xmlns:behaviors="using:Flantter.MilkyWay.Views.Behaviors"
    xmlns:contents="using:Flantter.MilkyWay.Views.Contents"
    xmlns:controls="using:Flantter.MilkyWay.Views.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d"
    d:DesignHeight="720"
    d:DesignWidth="400">

    <SemanticZoom IsZoomOutButtonEnabled="False" IsZoomedInViewActive="{x:Bind ViewModel.IsZoomedInViewActive.Value, Mode=TwoWay}">
        <SemanticZoom.ZoomedInView>
            <contents:ColumnAreaListBox x:Name="ColumnAreaColumnList" Margin="5,10" Style="{StaticResource ExtendedListBox}" Background="Transparent" ItemsSource="{x:Bind ViewModel.Columns}" ItemContainerStyle="{StaticResource ColumnListBoxItemStyle}" SelectedIndex="{x:Bind ViewModel.ColumnSelectedIndex.Value, Mode=OneWay}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!-- 本当はここもx:Bindにしたいけどすると "error WMC9999" が発生する -->
                        <contents:ExtendedCanvas Width="{Binding PanelWidth.Value, Mode=OneWay}" SnapPointsSpaceing="{Binding SnapPointsSpaceing.Value, Mode=OneWay}" MaxSnapPoint="{Binding MaxSnapPoint.Value, Mode=OneWay}" MinSnapPoint="{Binding MinSnapPoint.Value, Mode=OneWay}"/>
                        <!--<contents:ExtendedCanvas Width="{x:Bind ViewModel.PanelWidth.Value, Mode=OneWay}" SnapPointsSpaceing="{x:Bind ViewModel.SnapPointsSpaceing.Value, Mode=OneWay}" MaxSnapPoint="{x:Bind ViewModel.MaxSnapPoint.Value, Mode=OneWay}" MinSnapPoint="{x:Bind ViewModel.MinSnapPoint.Value, Mode=OneWay}"/>-->
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:ColumnViewModel">
                        <Grid Background="{StaticResource ColumnViewBackgroundBrush}" Width="{x:Bind Width.Value, Mode=OneWay}" Height="{x:Bind Height.Value, Mode=OneWay}" behaviors:TweetMultipulSelectBehavior.IsMultipulSelectOpened="{x:Bind IsMultipulSelectOpened.Value, Mode=OneWay}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <contents:TimelineArea Grid.Row="0" ViewModel="{x:Bind}"/>

                            <Polygon Grid.Row="0" Visibility="{x:Bind UnreadCount.Value, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}" Fill="{StaticResource ColumnViewControlBarUnreadCountGridBackgroundBrush}" Points="10,10,20,0,30,10" Width="40" Height="10" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>

                            <Grid x:Name="TweetMultipulActionGrid" x:DeferLoadStrategy="Lazy" Grid.Row="1">
                                <Grid.Resources>
                                    <Storyboard x:Name="TweetMultipulActionGridOpenAnimation">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TweetMultipulActionHorizontalBar" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TweetMultipulActionStackPanel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="TweetMultipulActionStackPanel">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="75">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Name="TweetMultipulActionGridCloseAnimation">
                                        <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="Height" Storyboard.TargetName="TweetMultipulActionStackPanel">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TweetMultipulActionStackPanel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TweetMultipulActionHorizontalBar" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Grid.Resources>

                                <controls:HorizontalBar x:Name="TweetMultipulActionHorizontalBar"/>

                                <StackPanel x:Name="TweetMultipulActionStackPanel" Height="0" HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Button Height="75" Width="80" Background="Transparent" BorderThickness="0" Command="{x:Bind Notice.RetweetStatusesCommand}" CommandParameter="{x:Bind SelectedItemsList.Value, Mode=OneWay}">
                                        <SymbolIcon Symbol="ReShare" />
                                    </Button>
                                    <Button Height="75" Width="80" Background="Transparent" BorderThickness="0" Command="{x:Bind Notice.FavoriteStatusesCommand}" CommandParameter="{x:Bind SelectedItemsList.Value, Mode=OneWay}">
                                        <SymbolIcon Symbol="Favorite" />
                                    </Button>
                                    <Button Height="75" Width="80" Background="Transparent" BorderThickness="0" Command="{x:Bind Notice.ReplyToStatusesCommand}" CommandParameter="{x:Bind SelectedItemsList.Value, Mode=OneWay}">
                                        <SymbolIcon Symbol="Message" />
                                    </Button>
                                    <Button Height="75" Width="80" Background="Transparent" BorderThickness="0" Command="{x:Bind CloseStatusMultipulSelectCommand}">
                                        <SymbolIcon Symbol="Cancel" />
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <Grid Grid.Row="2" Height="30" Background="{StaticResource ColumnViewControlBarUnselectedForegroundBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="40"/>
                                </Grid.ColumnDefinitions>

                                <SymbolIcon Grid.Column="0" Foreground="{StaticResource ColumnViewControlBarSymbolIconForegroundBrush}" Margin="5,0,0,0" Symbol="{x:Bind ActionSymbol.Value, Mode=OneWay}" HorizontalAlignment="Left"/>

                                <TextBlock Grid.Column="0" Foreground="{StaticResource ColumnViewControlBarTextblockForegroundBrush}" Margin="40,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <Run Text="{x:Bind Name.Value, Mode=OneWay}"/>
                                    <Run Text=" - "/>
                                    <Run Text="@"/><Run Text="{x:Bind AccountName.Value, Mode=OneWay}"/>
                                </TextBlock>

                                <Border Grid.Column="3" Visibility="{x:Bind UnreadButtonVisibility.Value, Converter={StaticResource BooleanNegationToVisibilityConverter}, Mode=OneWay}" Width="40" Height="30" Margin="0" Background="{StaticResource ColumnViewControlBarUnreadCountGridBackgroundBrush}">
                                    <Button Background="Transparent" BorderThickness="0" Width="40" Height="30" Padding="0" Command="{x:Bind ScrollToTopCommand}">
                                        <TextBlock Foreground="{StaticResource ColumnViewControlBarUnreadCountTextblockForegroundBrush}" Text="{x:Bind UnreadCount.Value, Mode=OneWay}" FontSize="14" FontWeight="Bold"/>
                                    </Button>
                                </Border>

                                <Button Grid.Column="3" Visibility="{x:Bind UnreadButtonVisibility.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" BorderThickness="0" Width="40" Height="30" Padding="0" Command="{x:Bind ScrollToTopCommand}">
                                    <SymbolIcon Foreground="{StaticResource ColumnViewControlBarSymbolIconForegroundBrush}" Symbol="Up"/>
                                </Button>

                                <Button Grid.Column="2" ToolTipService.ToolTip="Menu" VerticalAlignment="Stretch" Width="40" BorderThickness="0" Padding="0">
                                    <SymbolIcon Foreground="{StaticResource ColumnViewControlBarSymbolIconForegroundBrush}" Symbol="Add"/>
                                    <Button.Flyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem x:Uid="ColumnView_ControlBar_MenuFlyout_Refresh" Text="&#xE149; 更新" FontFamily="Segoe UI Symbol" Command="{x:Bind RefreshCommand}"/>
                                            <MenuFlyoutItem x:Uid="ColumnView_ControlBar_MenuFlyout_MultipulSelect" Visibility="{x:Bind IsEnabledMultipulSelect.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Text="&#xE15C; 複数選択" FontFamily="Segoe UI Symbol" Command="{x:Bind OpenStatusMultipulSelectCommand}"/>
                                            <MenuFlyoutSeparator Visibility="{x:Bind IsCollectionColumn.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                                            <MenuFlyoutItem x:Uid="ColumnView_ControlBar_MenuFlyout_OpenCollection" Visibility="{x:Bind IsCollectionColumn.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Text="&#xE2FD; コレクションをブラウザで開く" FontFamily="Segoe UI Symbol" Command="{x:Bind Notice.OpenCollectionCommand}" CommandParameter="{x:Bind Model, Mode=OneWay}"/>
                                            <MenuFlyoutSeparator/>
                                            <MenuFlyoutItem x:Uid="ColumnView_ControlBar_MenuFlyout_ColumnSetting" Text="&#xE115; カラム設定" FontFamily="Segoe UI Symbol" Command="{x:Bind Notice.ShowColumnSettingCommand}" CommandParameter="{x:Bind Model.ColumnSetting, Mode=OneWay}"/>
                                            <MenuFlyoutItem x:Uid="ColumnView_ControlBar_MenuFlyout_CreateFilterColumn" Visibility="{x:Bind EnableCreateFilterColumn.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Text="&#xE129; フィルタカラム作成" FontFamily="Segoe UI Symbol" Command="{x:Bind Notice.AddFilterColumnCommand}"/>
                                            <MenuFlyoutItem x:Uid="ColumnView_ControlBar_MenuFlyout_ClearColumn" Text="&#xE138; カラムのクリア" FontFamily="Segoe UI Symbol" Command="{x:Bind ClearColumnCommand}"/>
                                            <MenuFlyoutItem x:Uid="ColumnView_ControlBar_MenuFlyout_DeleteColumn" Visibility="{x:Bind CanDeleteColumn.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Text="&#xE138; カラムの削除" FontFamily="Segoe UI Symbol" Command="{x:Bind Notice.DeleteColumnCommand}" CommandParameter="{x:Bind Model.ColumnSetting, Mode=OneWay}"/>
                                        </MenuFlyout>
                                    </Button.Flyout>
                                </Button>
                                <Button Grid.Column="1" ToolTipService.ToolTip="Streaming" VerticalAlignment="Stretch" Width="40" BorderThickness="0" Padding="0" Visibility="{x:Bind IsEnabledStreaming.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Command="{x:Bind StreamingCommand}">
                                    <SymbolIcon Foreground="{StaticResource ColumnViewControlBarSymbolIconForegroundBrush}" Symbol="{x:Bind StreamingSymbol.Value, Mode=OneWay}"/>
                                </Button>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </contents:ColumnAreaListBox>
        </SemanticZoom.ZoomedInView>

        <SemanticZoom.ZoomedOutView>
            <ListView Visibility="{x:Bind ViewModel.IsZoomedInViewActive.Value, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}" ItemsSource="{x:Bind ViewModel.ReorderColumns, Mode=OneWay}" CanReorderItems="True" AllowDrop="True" ScrollViewer.HorizontalScrollMode="Enabled" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollMode="Enabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="{Binding ZoomOutOrientation.Value, Mode=OneWay}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:ColumnViewModel">
                        <Border Background="Transparent">

                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{x:Bind Notice.ChangeColumnSelectedIndexCommand}" CommandParameter="{x:Bind Mode=OneWay}" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>

                            <Grid x:Name="ColumnArea_ReorderGrid" Background="{StaticResource ColumnViewBackgroundBrush}" MinWidth="250" MaxWidth="600" MinHeight="170" MaxHeight="500" Margin="6,12">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="24"/>
                                </Grid.RowDefinitions>

                                <Button Visibility="{x:Bind CanDeleteColumn.Value, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Top" Command="{x:Bind Notice.DeleteColumnCommand}" CommandParameter="{x:Bind Model.ColumnSetting, Mode=OneWay}">
                                    <SymbolIcon Foreground="{StaticResource ColumnViewControlBarSymbolIconForegroundBrush}" Symbol="Cancel" HorizontalAlignment="Center" Width="32" Height="32"/>
                                </Button>

                                <SymbolIcon Grid.Row="1" Foreground="{StaticResource ColumnViewControlBarSymbolIconForegroundBrush}" Symbol="{x:Bind ActionSymbol.Value, Mode=OneWay}" HorizontalAlignment="Center" Width="50" Height="50"/>
                                <TextBlock Grid.Row="2" Foreground="{StaticResource ColumnViewControlBarTextblockForegroundBrush}" Text="{x:Bind Name.Value, Mode=OneWay}" HorizontalAlignment="Center" />
                                
                                <Rectangle Grid.Row="4" Fill="{StaticResource ColumnViewControlBarUnselectedForegroundBrush}"/>
                                <TextBlock Grid.Row="4" Foreground="{StaticResource ColumnViewControlBarTextblockForegroundBrush}" HorizontalAlignment="Left" Margin="5,0" VerticalAlignment="Center">
                                    <Run Text="@"/><Run Text="{x:Bind AccountName.Value, Mode=OneWay}" />
                                </TextBlock>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ListView>
        </SemanticZoom.ZoomedOutView>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SizeStateGroup">
                <VisualState x:Name="Minimal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" MinWindowHeight="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ColumnAreaColumnList.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Min">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="352" MinWindowHeight="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ColumnAreaColumnList.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="384" MinWindowHeight="500" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" MinWindowHeight="500" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </SemanticZoom>

</UserControl>
